@page "/tasks"
@using Radzen
@using Ui.Client.Pages.TaskDetail
@using Ui.Shared

<div class="row">
    <div class="col-md-6" style="margin-bottom: 16px">
        <h2 class="text-center">Task List</h2>

        <RadzenTree Data="@taskMessages" Expand="@Expand" Change="@Change"
                    Style="width: 100%">
            <RadzenTreeLevel TextProperty="Name" ChildrenProperty="Children">
                <Template>
                    @{
                        var task = context.Value as TaskWithSubTasks;
                        string grad = (int) task.ProcessPercentage != 0 ? $"background: linear-gradient(90deg, #47c8b075 0%, #47c8b075 {(int) task.ProcessPercentage}%, transparent {(int) task.ProcessPercentage + 5}%);" : "";
                        var style = $"width: 98%;{grad}";
                    }
                    <div class="row" style="@style">
                        <div class="col-sm-8" style="word-break: break-all;word-wrap: break-word">@task.Name</div>
                        <div class="col-sm-4">@task.StartDate</div>
                    </div>
                </Template>
            </RadzenTreeLevel>
            <RadzenTreeLevel TextProperty="Name" HasChildren="@((task) => false)">
                <Template>
                    @{
                        var task = context.Value as TaskWithSubTasks;
                        string grad = (int) task.ProcessPercentage != 0 ? $"background: linear-gradient(90deg, #47c8b075 0%, #47c8b075 {(int) task.ProcessPercentage}%, transparent {(int) task.ProcessPercentage + 5}%);" : "";
                        var style = $"width: 98%;margin-left:0;{grad}";
                    }
                    <div class="row" style="@style">
                        <div class="col-sm-8" style="word-break: break-all;word-wrap: break-word">@task.Name</div>
                        <div class="col-sm-4">@task.StartDate</div>
                    </div>
                </Template>
            </RadzenTreeLevel>
        </RadzenTree>
    </div>
    <div class="col-md-6" style="margin-bottom: 16px">
        <RadzenCard style="overflow: auto;height:500px;width: 35%; position: fixed; justify-content: space-between;">
            @if (isCreateEnabled)
            {
                <TaskCreate/>
            }
            else
            {
                <TaskInfo @bind-SelectedTask="selectedTask"></TaskInfo>
            }
            <div class="row justify-content-between">
                <button class="col col-md-6 btn btn-info" @onclick="@(e => isCreateEnabled = !isCreateEnabled)">
                    @if (!isCreateEnabled)
                    {
                        <span>Create task</span>
                    }
                    else
                    {
                        <span>Cancel</span>
                    }
                </button>
                @if (selectedTask != null && !isCreateEnabled)
                {
                    <button class="col col-md-5 btn btn-danger">Delete</button>
                }
            </div>
        </RadzenCard>
    </div>
</div>

@code {

    private List<TaskWithSubTasks> taskMessages = new List<TaskWithSubTasks>
    {
        
        new TaskWithSubTasks
        {
            Name = "test",
            Creator = "I am"
        }
    };

    bool isCreateEnabled = false;
    
    TaskWithSubTasks selectedTask = null;
    void Change(TreeEventArgs args)
    {
        if (args.Value is TaskWithSubTasks task)
        {
            selectedTask = task;
        }
    }

    void Expand(TreeExpandEventArgs args)
    {
        if (args.Value is TaskWithSubTasks task)
        {
            selectedTask = task;
        }
    }


}