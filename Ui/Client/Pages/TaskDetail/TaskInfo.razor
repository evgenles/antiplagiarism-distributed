@using Ui.Shared
@using Agent.Abstract.Models
@using System.Text.Json
@using Ui.Shared.Converters

<div>
    <h2 class="text-center">Task Info</h2>
    @if (SelectedTask == null)
    {
        <h4>Task is not selected</h4>
    }
    else
    {
        <div class="table table-responsive">
            <div class="row" style="width: 99%">
                <div class="col-sm">Name: </div>
                <div class="col-sm">@SelectedTask?.Name</div>
            </div>
            <div class="row" style="width: 99%">
                <div class="col-sm">Start time: </div>
                <div class="col-sm">@SelectedTask?.StartDate</div>
            </div>
            <div class="row" style="width: 99%">
                <div class="col-sm">Creator: </div>
                <div class="col-sm">@SelectedTask?.Creator</div>
            </div>
            @if (SelectedTask?.RequiredSubtype != null)
            {
                <div class="row" style="width: 99%">
                    <div class="col-sm">Required sub types </div>
                    <div class="col-sm">@string.Join(", ", SelectedTask.RequiredSubtype)</div>
                </div>
            }
            <div class="row" style="width: 99%">
                <div class="col-sm">Current percentage: </div>
                <div class="col-sm">@SelectedTask?.ProcessPercentage %</div>
            </div>
            @if (SelectedTask.Workers != null)
            {
                @foreach (var (worker, info) in SelectedTask.Workers)
                {
                    <div class="row" style="width: 99%">
                        <div class="col-sm"> - @worker </div>
                        <div class="col-sm">@info.Process %</div>
                    </div>
                }
            }
            @if (Math.Abs((SelectedTask?.ProcessPercentage ?? 0) - 100) < 0.0001)
            {
                <div class="row" style="width: 99%">
                    <div class="col-sm">Unique percentage: </div>
                    <div class="col-sm">@SelectedTask?.UniquePercentage %</div>
                </div>
                <div class="row" style="width: 99%">
                    <div class="col-sm">Error percentage: </div>
                    <div class="col-sm">@SelectedTask?.ErrorPercentage %</div>
                </div>
                <div class="row justify-content-center" style="width: 99%;margin-top: 10px">
                    <button class="btn btn-outline-info" @onclick="@OnDetailedSelected">Detailed report</button>
                </div>
            }

        </div>
    }
</div>


@code {

    [Parameter]
    public TaskWithSubTasks SelectedTask { get; set; }


    [Parameter]
    public EventCallback<TaskWithSubTasks> SelectedTaskChanged { get; set; }

    [Inject]
    private PageShared SharedObj { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void OnDetailedSelected(EventArgs args)
    {
        if (SelectedTask?.Workers?.Any(x => !string.IsNullOrEmpty(x.Value.Report)) ?? false)
        {
            SharedObj.Reports = SelectedTask.Workers.ToDictionary(x => x.Key, 
                x => JsonSerializer.Deserialize<Dictionary<string, object>>(x.Value.Report, new JsonSerializerOptions
                {
                    Converters = { new ObjectAsStringConverter() }
                }));
            NavigationManager.NavigateTo("/tasks/showreport");
        }
    }

}