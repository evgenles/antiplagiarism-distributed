version: '3'

services:
  zookeeper:
    image: zookeeper:3.4.14
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    security_opt:
      - label:disable
  kafka:
    image: confluentinc/cp-kafka:5.4.0
    container_name: kafka
    restart: always
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARNING,kafka.producer.async.DefaultEventHandler=WARNING,state.change.logger=WARNING"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    security_opt:
      - label:disable
  mongodb:
    image: mongo:4.2
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - 9090:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH : "/"
    depends_on:
      - zookeeper
      - kafka

  grafana:
    image: grafana/grafana:6.6.2
    restart: always
    ports:
      - 3000:3000